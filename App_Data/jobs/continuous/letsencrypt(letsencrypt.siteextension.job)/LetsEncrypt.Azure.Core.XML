<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LetsEncrypt.Azure.Core</name>
    </assembly>
    <members>
        <member name="P:LetsEncrypt.Azure.Core.Models.AppSettingsAuthConfig.RunFromZip">
            <summary>
            Uses the environment variables to determine in site is using run from zip/package deployment.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureEnvironment.AuthenticationEndpoint">
            <summary>
            The authentication endpoint to use when signin in the service principal.
            Defaults to https://login.windows.net/.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureEnvironment.ClientId">
            <summary>
            The client id of the service principal. 
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureEnvironment.ClientSecret">
            <summary>
            The client secret for the service principal to use.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureEnvironment.ManagementEndpoint">
            <summary>
            The Azure Management API endpoint to use. Defaults to https://management.azure.com
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureEnvironment.ResourceGroupName">
            <summary>
            The resource group name that the web app belongs to.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureEnvironment.SubscriptionId">
            <summary>
            The Azure subscription to use. 
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureEnvironment.Tenant">
            <summary>
            The Azure AD tenant to use. 
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureEnvironment.TokenAudience">
            <summary>
            The token audience to use. Defaults to https://management.core.windows.net/
            </summary>
        </member>
        <member name="T:LetsEncrypt.Azure.Core.Models.AzureWebAppEnvironment">
            <summary>
            Description of the Azure environment.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureWebAppEnvironment.AzureWebSitesDefaultDomainName">
            <summary>
            The azure domain name for the web app. Defaults to azurewebsites.net
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureWebAppEnvironment.ServicePlanResourceGroupName">
            <summary>
            The app service plan resource group name, 
            only required if the web app and app service plan is in different resource groups.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureWebAppEnvironment.SiteSlotName">
            <summary>
            The site slot to install the certificate on. Only required if multiple slots is used.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureWebAppEnvironment.WebAppName">
            <summary>
            The name of the web app (without .azurewebsites.net)
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureWebAppEnvironment.WebRootPath">
            <summary>
            The path to the web root.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AzureWebAppEnvironment.RunFromPackage">
            <summary>
            Is the web app using RunFromPackage deployment (wwwroot is readonly)
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AcmeConfig.RegistrationEmail">
            <summary>
            The registration email used when registering the Let's Encrypt certificate.
            Will receive notification when certificates expire. 
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AcmeConfig.BaseUri">
            <summary>
            The Let's Encrypt API url. 
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AcmeConfig.Host">
            <summary>
            The host name the certificate should be issued for.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AcmeConfig.AlternateNames">
            <summary>
            Alternate DNS names besides the host name that should be included in the certificate.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AcmeConfig.RSAKeyLength">
            <summary>
            The Certificate key length. Defaults to 2048.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AcmeConfig.PFXPassword">
            <summary>
            The password used to protect the pfx file. 
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.AcmeConfig.UseProduction">
            <summary>
            Should the Lets Encrypt production environment be used. 
            Only checked if <see cref="P:LetsEncrypt.Azure.Core.Models.AcmeConfig.BaseUri"/> isn't set. 
            </summary>
        </member>
        <member name="T:LetsEncrypt.Azure.Core.Models.CertificateInfo">
            <summary>
            Information about the requested certificate.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.CertificateInfo.Name">
            <summary>
            The name of the certificate.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.CertificateInfo.Password">
            <summary>
            Password of the certificate.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.CertificateInfo.PfxCertificate">
            <summary>
            The byte content of the pfx certificate.
            </summary>
        </member>
        <member name="T:LetsEncrypt.Azure.Core.Models.CertificateInstallModel">
            <summary>
            Result of the certificate installation.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.CertificateInstallModel.AllDnsIdentifiers">
            <summary>
            List of DNS names the certificate was requested for.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.CertificateInstallModel.CertificateInfo">
            <summary>
            Certificate info.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.CertificateInstallModel.Host">
            <summary>
            The primary host name. 
            </summary>
        </member>
        <member name="T:LetsEncrypt.Azure.Core.Models.CertificateServiceSettings">
            <summary>
            Settings for whether to use Server Name Indication (SNI) or IP-based SSL bindings.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.CertificateServiceSettings.UseIPBasedSSL">
            <summary>
            If set to true IP-based SSL will be used.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.IAcmeConfig.Host">
            <summary>
            The host name the certificate should be issued for.
            </summary>
        </member>
        <member name="P:LetsEncrypt.Azure.Core.Models.IAcmeConfig.UseProduction">
            <summary>
            Should the Lets Encrypt production environment be used. 
            Only checked if <see cref="P:LetsEncrypt.Azure.Core.Models.IAcmeConfig.BaseUri"/> isn't set. 
            </summary>
        </member>
        <member name="M:LetsEncrypt.Azure.Core.CertificateManager.#ctor(LetsEncrypt.Azure.Core.Models.AppSettingsAuthConfig)">
            <summary>
            For backwards compatability
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:LetsEncrypt.Azure.Core.CertificateManager.CreateBlobWebAppCertificateManager(LetsEncrypt.Azure.Core.Models.IAzureWebAppEnvironment,LetsEncrypt.Azure.Core.Models.IAcmeConfig,LetsEncrypt.Azure.Core.Models.IWebAppCertificateSettings)">
            <summary>
            Returns a <see cref="T:LetsEncrypt.Azure.Core.CertificateManager"/> configured to use HTTP Challenge, placing the challenge file on Azure Blob Storage,
            and assigning the obtained certificate directly to the web app service. 
            </summary>
            <param name="settings"></param>
            <param name="acmeConfig"></param>
            <param name="certSettings"></param>
            <returns></returns>
        </member>
        <member name="M:LetsEncrypt.Azure.Core.CertificateManager.CreateKuduWebAppCertificateManager(LetsEncrypt.Azure.Core.Models.IAzureWebAppEnvironment,LetsEncrypt.Azure.Core.Models.IAcmeConfig,LetsEncrypt.Azure.Core.Models.IWebAppCertificateSettings,LetsEncrypt.Azure.Core.Models.IAuthorizationChallengeProviderConfig)">
            <summary>
            Returns a <see cref="T:LetsEncrypt.Azure.Core.CertificateManager"/> configured to use HTTP Challenge, placing the challenge file on Azure Web App 
            using Kudu, and assigning the obtained certificate directly to the web app service. 
            </summary>
            <param name="settings"></param>
            <param name="acmeConfig"></param>
            <param name="certSettings"></param>
            <param name="authProviderConfig"></param>
            <returns></returns>
        </member>
        <member name="M:LetsEncrypt.Azure.Core.CertificateManager.CreateAzureDnsWebAppCertificateManager(LetsEncrypt.Azure.Core.Models.IAzureWebAppEnvironment,LetsEncrypt.Azure.Core.Models.IAcmeConfig,LetsEncrypt.Azure.Core.Models.IWebAppCertificateSettings,LetsEncrypt.Azure.Core.Models.IAzureDnsEnvironment)">
            <summary>
            Returns a <see cref="T:LetsEncrypt.Azure.Core.CertificateManager"/> configured to use DNS Challenge, placing the challenge record in Azure DNS,
            and assigning the obtained certificate directly to the web app service. 
            </summary>
            <param name="settings"></param>
            <param name="acmeConfig"></param>
            <param name="certSettings"></param>
            <param name="dnsEnvironment"></param>
            <returns></returns>
        </member>
        <member name="M:LetsEncrypt.Azure.Core.CertificateManager.RequestDnsChallengeCertificate(LetsEncrypt.Azure.Core.Models.IAzureDnsEnvironment,LetsEncrypt.Azure.Core.Models.IAcmeConfig)">
            <summary>
            Request a certificate from lets encrypt using the DNS challenge, placing the challenge record in Azure DNS. 
            The certifiacte is not assigned, but just returned. 
            </summary>
            <param name="azureDnsEnvironment"></param>
            <param name="acmeConfig"></param>
            <returns></returns>
        </member>
        <member name="M:LetsEncrypt.Azure.Core.CertificateManager.AddCertificate">
            <summary>
            Used for automatic installation of letsencrypt certificate 
            </summary>
        </member>
        <member name="M:LetsEncrypt.Azure.Core.KuduHelper.MakeScmUri(System.String,LetsEncrypt.Azure.Core.Models.IAzureWebAppEnvironment)">
            <summary>
            TODO; should also work for APP service environment, which uses a different format for scm site uri https://blogs.msdn.microsoft.com/benjaminperkins/2017/11/08/how-to-access-kudu-scm-for-an-azure-app-service-environment-ase/
            </summary>
            <param name="defaultHostName"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="T:LetsEncrypt.Azure.Core.Services.PathProvider">
            <summary>
            Class to help resolve the acme-challange folder in azure web apps.
            </summary>
        </member>
        <member name="T:LetsEncrypt.Azure.Core.Services.WebAppCertificateService">
            <summary>
            Installs and assigns the certificate directly to the app service plan. 
            </summary>
        </member>
    </members>
</doc>
